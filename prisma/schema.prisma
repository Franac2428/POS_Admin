generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuarios {
  Id        Int      @id @default(autoincrement())
  email     String   @unique
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  nombre    String
  apellido  String
  telefono  String
  direccion String

  resetPasswordToken       String?   @unique
  resetPasswordTokenExpiry DateTime?

  emailVerified          Boolean @default(false)
  emailVerificationToken String? @unique

  role String
  usuarioRoles UsuarioRole[]

  horarios     AsignacionHorario[]
}

model StatusAuditoriaLogin {
  IdStatusAuditoriaLogin Int    @id @default(autoincrement())
  Status                 String

  auditoriaLogins AuditoriaLogin[]
}

model AuditoriaLogin {
  IdAuditoriaLogin       Int       @id @default(autoincrement())
  FechaLogin             DateTime  @default(now())
  Usuario                String
  Clave                  String?
  IdStatusAuditoriaLogin Int
  FechaEstadoActualizado DateTime?
  Mensaje                String?

  fk_StatusAuditoria StatusAuditoriaLogin @relation(fields: [IdStatusAuditoriaLogin], references: [IdStatusAuditoriaLogin])
}

model Role {
  id          Int           @id @default(autoincrement())
  roleName    String        @unique
  description String?
  usuarios    UsuarioRole[]
  permisos    RolPermiso[]
}

model Permiso {
  id             Int          @id @default(autoincrement())
  permissionName String       @unique
  description    String?
  roles          RolPermiso[]
}

model UsuarioRole {
  usuarioId Int
  roleId    Int
  role      Role     @relation(fields: [roleId], references: [id])
  usuario   Usuarios @relation(fields: [usuarioId], references: [Id])

  @@id([usuarioId, roleId])
}

model RolPermiso {
  roleId       Int
  permissionId Int
  role         Role    @relation(fields: [roleId], references: [id])
  permiso      Permiso @relation(fields: [permissionId], references: [id])

  @@id([roleId, permissionId])
}

model Horario {
  Id          Int                 @id @default(autoincrement())
  Dia         String
  HoraInicio  String
  HoraFin     String
  empleados   AsignacionHorario[]
}


model AsignacionHorario {
  AsignacionID Int       @id @default(autoincrement())
  EmpleadoID   Int
  HorarioID    Int
  empleado     Usuarios  @relation(fields: [EmpleadoID], references: [Id])
  horario      Horario   @relation(fields: [HorarioID], references: [Id])
}
model Pedido {
  id                Int       @id @default(autoincrement())
  proveedor         String
  medioPedido       String
  productos         Json
  observaciones     String?
  estado            Estado    @default(EN_PROGRESO)
  fechaFinalizacion DateTime?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
}

enum Estado {
  EN_PROGRESO
  CANCELADO
  FINALIZADO
}