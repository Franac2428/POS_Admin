generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuarios {
  Id        Int      @id @default(autoincrement())
  email     String   @unique
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  nombre    String
  apellido  String
  telefono  String
  direccion String

  resetPasswordToken       String?   @unique
  resetPasswordTokenExpiry DateTime?

  emailVerified          Boolean @default(false)
  emailVerificationToken String? @unique

  horarioId   Int?
  Horario     Horario?  @relation(fields: [horarioId], references: [Id])


  roleId   Int
  Role     Role       @relation(fields: [roleId], references: [IdRole])
 
  asistencias Asistencia[]
  metas Metas[]


  @@map("usuarios")
}

model Asistencia {
  id         Int       @id @default(autoincrement())
  empleadoId Int
  empleado   Usuarios  @relation(fields: [empleadoId], references: [Id])
  entrada    DateTime
  salida     DateTime?
  observacion     String?
  fecha      DateTime
  
  @@unique([empleadoId, fecha])
}

model Metas {
  id         Int       @id @default(autoincrement())
  empleadoId Int
  empleado   Usuarios  @relation(fields: [empleadoId], references: [Id])
  observaciones     String?
  fecha      DateTime  
}


model StatusAuditoriaLogin {
  IdStatusAuditoriaLogin Int    @id @default(autoincrement())
  Status                 String
  auditoriaLogins        AuditoriaLogin[]
}

model AuditoriaLogin {
  IdAuditoriaLogin       Int       @id @default(autoincrement())
  FechaLogin             DateTime  @default(now())
  Usuario                String
  Clave                  String?
  IdStatusAuditoriaLogin Int
  FechaEstadoActualizado DateTime?
  Mensaje                String?

  fk_StatusAuditoria     StatusAuditoriaLogin @relation(fields: [IdStatusAuditoriaLogin], references: [IdStatusAuditoriaLogin])
}


model Role {
  IdRole      Int    @id @default(autoincrement())
  Descripcion String

  usuarios Usuarios[]

  @@map("roles")
}

model Clientes {
  clienteId         Int      @id @default(autoincrement())
  nombre            String
  apellido          String
  email             String
  telefono          String
  celular           String
  direccion         String
  eliminado         Boolean
  fechaCreacion     DateTime @default(now())
  idUsuarioCreacion Int
  rfc               String
  facturas  Facturas[]
}

model CategoriaProdVenta {
  idCategoriaProdVenta Int             @id @default(autoincrement())
  nombre               String
  estado               Boolean
  productosVenta       ProductoVenta[]
}

model ProductoVenta {
  idProductoVenta      Int      @id @default(autoincrement())
  nombre               String
  cantidad             Decimal  @db.Decimal(18, 3)
  cantidadMinima       Decimal  @db.Decimal(18, 3)
  precio               Decimal  @db.Decimal(18, 3)
  idUsuarioCreacion    Int
  fechaCreacion        DateTime @default(now())
  eliminado            Boolean
  idCategoriaProdVenta Int
  imagen               Bytes
  tipoImagen           String

  fk_CategoriaProdVenta CategoriaProdVenta @relation(fields: [idCategoriaProdVenta], references: [idCategoriaProdVenta])
  fk_detallesFactura     DetallesFactura[] 
}

model Horario {
  Id         Int                 @id @default(autoincrement())
  Dia        String
  HoraInicio DateTime
  HoraFin    DateTime
  usuarios Usuarios[]
}



model Pedido {
  id                Int       @id @default(autoincrement())
  proveedor         String
  medioPedido       String
  productos         Json
  observaciones     String?
  estado            Estado    @default(EN_PROGRESO)
  fechaFinalizacion DateTime?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
}

enum Estado {
  EN_PROGRESO
  CANCELADO
  FINALIZADO
}

model Proveedores {
  ProveedorID   Int             @id @default(autoincrement())
  Nombre        String
  Tipo          String   @default("Desconocido")
  Direccion     String?
  Telefono      String?
  Email         String          @unique
  Contacto      String?
  Pedidos       Pedidos[]
  Productos     Productos[]
}

model Pedidos {
  PedidoID       Int             @id @default(autoincrement())
  ProveedorID    Int
  FechaEmision   DateTime
  FechaRecepcion DateTime?
  Estado         String
  Observaciones  String?
  Proveedor      Proveedores     @relation(fields: [ProveedorID], references: [ProveedorID])
  Detalles       DetallesPedido[]
}

model DetallesPedido {
  DetallePedidoID Int             @id @default(autoincrement())
  PedidoID        Int
  ProductoID      Int
  Cantidad        Int
  PrecioUnitario  Float
  IVA             Float
  Total           Float
  Pedido          Pedidos         @relation(fields: [PedidoID], references: [PedidoID])
  Producto        Productos       @relation(fields: [ProductoID], references: [ProductoID])
}

model Productos {
  ProductoID      Int             @id @default(autoincrement())
  Nombre          String
  Descripcion     String?
  PrecioCompra    Float
  PrecioVenta     Float
  Stock           Int
  CategoriaID     Int
  ProveedorID     Int
  FechaIngreso    DateTime
  FechaCaducidad  DateTime?
  Estado          String
  Categoria       CategoriasProducto @relation(fields: [CategoriaID], references: [CategoriaProductoID])
  Proveedor       Proveedores        @relation(fields: [ProveedorID], references: [ProveedorID])
  DetallesPedidos DetallesPedido[]
}

model CategoriasProducto {
  CategoriaProductoID Int             @id @default(autoincrement())
  NombreCategoria     String
  Descripcion         String?
  Productos           Productos[]
}

model InfoEmpresa {
  idEmpresa       Int     @id @default(autoincrement())
  nombre          String
  nombreComercial String
  identificacion  String
  correo          String
  telefono        String
  celular         String
  direccion       String
  logo            Bytes?  @default(dbgenerated("null"))
  tipoImagen      String?
}

model MedioPago {
  idMedioPago Int @id @default(autoincrement())
  nombre      String
}

model Facturas {
  idFactura     Int              @id @default(autoincrement())
  clienteId     Int
  fechaEmision  DateTime
  documentoJson Json
  observaciones String
  idMedioPago   Int
  total         Decimal @db.Decimal(18, 5)
  pagadoCon Decimal @db.Decimal(18, 5)
  vuelto Decimal @db.Decimal(18, 5)

  cliente   Clientes   @relation(fields: [clienteId], references: [clienteId])
  detalles  DetallesFactura[]

  @@index([clienteId], name: "idx_idCliente")
}

model DetallesFactura {
  idDetalleFactura Int @id @default(autoincrement())
  idFactura        Int
  cantidad         Decimal @db.Decimal(18, 5)
  descripcion      String
  precio           Decimal @db.Decimal(18, 5)
  idProductoVenta  Int

  fk_factura Facturas @relation(fields: [idFactura], references: [idFactura])
  fk_productoVenta  ProductoVenta  @relation(fields: [idProductoVenta], references: [idProductoVenta])


  @@index([idFactura], name: "idx_idFactura")
}
